import streamlit as st
from main import run_nf_assistant
import os

st.set_page_config(page_title="NF Assistant Chat", layout="wide")

# --- Inicializa√ß√£o do estado da sess√£o ---
if "messages" not in st.session_state:
    st.session_state.messages = [
        {"role": "assistant", "content": "Ol√°! Sou seu assistente fiscal. \n"
        "Pergunte algo sobre o arquivo de notas fiscais que voc√™ selecionou acima üìÑ. \n"
        "*** Ser√£o exibidos tabelas com no maximo 20 linhas como resposta. ***"}
    ]

# --- T√≠tulo da p√°gina ---
st.title("üßæ NF Assistant - Chat sobre Notas Fiscais")

# Lista arquivos na pasta 'data'
data_dir = os.path.join(os.path.dirname(__file__), "data")
file_options = [f for f in os.listdir(data_dir) if os.path.isfile(os.path.join(data_dir, f))]

# Sele√ß√£o do arquivo pelo usu√°rio como lista de sele√ß√£o
selected_file = st.radio("Primeiramente selecione o arquivo de notas fiscais sobre qual voc√™ ira fazer suas perguntas:", file_options)

# Guarda o nome do arquivo selecionado na sess√£o
st.session_state.selected_file = selected_file
print(st.session_state.selected_file)


# --- Exibir hist√≥rico de mensagens com st.code para o assistente ---
for msg in st.session_state.messages:
    with st.chat_message(msg["role"]):
        if msg["role"] == "assistant":
            st.code(msg["content"])
        else:
            st.markdown(msg["content"])


# --- Entrada do usu√°rio ---
user_prompt = st.chat_input("Digite sua pergunta sobre as notas fiscais...")




# --- Processamento da pergunta ---
if user_prompt:
    # Adiciona pergunta ao hist√≥rico
    st.session_state.messages.append({"role": "user", "content": user_prompt})
    with st.chat_message("user"):
        st.markdown(user_prompt)

    with st.chat_message("assistant"):
        with st.spinner(f"‚è≥ Analisando os dados do arquivo {data_dir}/{selected_file}" ):
            try:
                print(f"Arquivo selecionado: {data_dir}/{selected_file}")
                
                response = run_nf_assistant(user_prompt, f".{data_dir}/{selected_file}")
                ai_reply = response.raw
            except Exception as e:
                ai_reply = f"‚ö†Ô∏è Ocorreu um erro ao processar: {e}"
        st.code(ai_reply)

    # Salva a resposta no hist√≥rico
    st.session_state.messages.append({"role": "assistant", "content": ai_reply})
